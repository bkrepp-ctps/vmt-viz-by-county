// vmtCommon.js - Library of common functions used in the VMT visualization apps.
//
// Author: Ben Krepp
// Date: August, 2020
(function() {
    // Internals of the library (if any) go here
    //
	var _projection = d3.geoAlbersUsa().scale(1300).translate([487.5, 305]);
	
	// *** Public API of the library begins here. ***
	return vmtCommon = {
		version : "1.0",

		// Value to indicate no VMT data record for {date, county} in data supplied by data provider.
		//
		NO_DATA : -300000000,
		
		// SVG GeoPath generator function, based on projection defined above
		//
		geoPath : d3.geoPath().projection(_projection),

		// Threshold logarithmic scale for rendering VMT data.
		// 5-class diverging scale, inverted, with initial 'no data' step added.
		// Range values from colorbrewer2.org: https://colorbrewer2.org/#type=diverging&scheme=Spectral&n=5
		//
		vmt_scale : d3.scaleThreshold()
						.domain([0, 100000, 1000000, 10000000, 100000000, Infinity])
						.range(['gray', "#2b83ba", "#abdda4", "#ffffbf", "#fdae61", "#d7191c"]),

		// VMT Legend labels 
		//
		vmt_legend_labels : ['No Data', '100,000', '1,000,000', '10,000,000', '100,000,000', '>100,000,000' ],

		// Threshold logarithmic scale for rendering the DELTA of VMT values beween January 2020 and a given date.
		// 9-class diverging scale, inverted, with initial 'no data' step added.
		// Range values from colorbrewer2.org: https://colorbrewer2.org/#type=diverging&scheme=Spectral&n=9
		//
		vmt_delta_scale : d3.scaleThreshold()
							.domain([-200000000, 
									 -100000000, -10000000, 1000000, -1000000,
									 100000, 1000000, 10000000, 100000000, Infinity])
							.range(['gray', 
									'#3288bd', '#66c2a5', '#abdda4', '#e6f598', 
									'#ffffbf', '#fee08b', '#fdae61', '#d53e4f']),

		// Delta VMT Legend labels 
		//
		vmt_delta_legend_labels : [	'No Data', 
									'>-100,000,000', '-10,000,000', '-1,000,000', '-100,000',
									'+100,000', '+1,000,000', '+10,000,000', '>+100,000,000'],

		// Dates for which we have VMT data
		//
		all_dates : [   
						'2020-01-01', '2020-01-02', '2020-01-03', '2020-01-04', '2020-01-05', '2020-01-06', '2020-01-07', 
						'2020-01-08', '2020-01-09', '2020-01-10', '2020-01-11', '2020-01-12', '2020-01-13', '2020-01-14', 
						'2020-01-15', '2020-01-16', '2020-01-17', '2020-01-18', '2020-01-19', '2020-01-20', '2020-01-21', 
						'2020-01-22', '2020-01-23', '2020-01-24', '2020-01-25', '2020-01-26', '2020-01-27', '2020-01-28',
						'2020-01-30', '2020-01-31',

						'2020-02-01', '2020-02-02', '2020-02-03', '2020-02-04', '2020-02-05', '2020-02-06', '2020-02-07', 
						'2020-02-08', '2020-02-09', '2020-02-10', '2020-02-11', '2020-02-12', '2020-02-13', '2020-02-14', 
						'2020-02-15', '2020-02-16', '2020-02-17', '2020-02-18', '2020-02-19', '2020-02-20', '2020-02-21', 
						'2020-02-22', '2020-02-23', '2020-02-24', '2020-02-25', '2020-02-26', '2020-02-27', '2020-02-28',

						'2020-03-01', '2020-03-02', '2020-03-03', '2020-03-04', '2020-03-05', '2020-03-06', '2020-03-07', 
						'2020-03-08', '2020-03-09', '2020-03-10', '2020-03-11', '2020-03-12', '2020-03-13', '2020-03-14', 
						'2020-03-15', '2020-03-16', '2020-03-17', '2020-03-18', '2020-03-19', '2020-03-20', '2020-03-21', 
						'2020-03-22', '2020-03-23', '2020-03-24', '2020-03-25', '2020-03-26', '2020-03-27', '2020-03-28',
						'2020-03-30', '2020-03-31',
						'2020-04-01', '2020-04-02', '2020-04-03', '2020-04-04', '2020-04-05', '2020-04-06', '2020-04-07', 
						'2020-04-08', '2020-04-09', '2020-04-10', '2020-04-11', '2020-04-12', '2020-04-13', '2020-04-14', 
						'2020-04-15', '2020-04-16', '2020-04-17', '2020-04-18', '2020-04-19', '2020-04-20', '2020-04-21', 
						'2020-04-22', '2020-04-23', '2020-04-24', '2020-04-25', '2020-04-26', '2020-04-27', '2020-04-28', 
						'2020-04-29', '2020-04-30', 

						'2020-05-01', '2020-05-02', '2020-05-03', '2020-05-04', '2020-05-05', '2020-05-06', '2020-05-07', 
						'2020-05-08', '2020-05-09', '2020-05-10', '2020-05-11', '2020-05-12', '2020-05-13', '2020-05-14', 
						'2020-05-15', '2020-05-16', '2020-05-17', '2020-05-18', '2020-05-19', '2020-05-20', '2020-05-21', 
						'2020-05-22', '2020-05-23', '2020-05-24', '2020-05-25', '2020-05-26', '2020-05-27', '2020-05-28', 
						'2020-05-29', '2020-05-30', '2020-05-31', 

						'2020-06-01', '2020-06-02', '2020-06-03', '2020-06-04', '2020-06-05', '2020-06-06', '2020-06-07', 
						'2020-06-08', '2020-06-09', '2020-06-10', '2020-06-11', '2020-06-12', '2020-06-13', '2020-06-14', 
						'2020-06-15', '2020-06-16', '2020-06-17', '2020-06-18', '2020-06-19', '2020-06-20', '2020-06-21', 
						'2020-06-22', '2020-06-23', '2020-06-24', '2020-06-25', '2020-06-26', '2020-06-27', '2020-06-28',
						'2020-06-29', '2020-06-30',
						
						'2020-07-01', '2020-07-02', '2020-07-03', '2020-07-04', '2020-07-05', '2020-07-06', '2020-07-07', 
						'2020-07-08', '2020-07-09', '2020-07-10', '2020-07-11', '2020-07-12', '2020-07-13', '2020-07-14', 
						'2020-07-15', '2020-07-16', '2020-07-17', '2020-07-18', '2020-07-19', '2020-07-20', '2020-07-21', 
						'2020-07-22', '2020-07-23', '2020-07-24', '2020-07-25', '2020-07-26', '2020-07-27', '2020-07-28'
					],

		minDate_absolute 	: 'January 1, 2020',
		minDate_delta 		: 'February 1, 2020',
		maxDate				: 'July 28, 2020',

		// make_date_text: Utility function to map a date string in yyyy-mm-dd format
		// into to one in conventional US-style textual format
		//
		make_date_text : 	function(date) {
								var parts = date.split('-');
								var year = parts[0]
								var month_num = parseInt(parts[1],10);
								var day = parseInt(parts[2],10);
								var months = ['January', 'February', 'March', 'April', 'May', 'June',
											  'July', 'August', 'September', 'October', 'November', 'December'];
								var month = months[month_num-1]; // Recall 0-based array indexing
								return month + ' ' + day + ', ' + year;
							} // make_date_text()
	}
})();